name: workflow for release branch

on:
  push:
    branches:
      - release*
      - main
      - staging
  workflow_dispatch:
    
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: build low privilege kube config
        run: |
          set -euo pipefail
          bash deploy/release-v0.1.0/kube/gen_config.sh 
        # generate kubeconfig-safezone.yaml
      
      - name: set kubeconfig env to new config
        run: echo "KUBECONFIG=kubeconfig-safezone.yaml" >> $GITHUB_ENV

      - name: Check K8s context
        run: kubectl config get-contexts

      - name: Deploy argocd application for phase infra
        run: |
          set -euo pipefail
          kubectl apply -n gitops -f deploy/release-v0.1.0/argocd/staging/apps/safezone-infra.yaml

      - name: Wait 5 seconds for infra deployment
        run: sleep 5

      - name: Deploy argocd application for phase infra-seed
        run: |
          set -euo pipefail
          kubectl apply -n gitops -f deploy/release-v0.1.0/argocd/staging/apps/safezone-infra-seed.yaml
      
      - name: Wait for infra-seed job Create
        run: sleep 3

      - name: Wait for infra-seed job completion
        run: |
          set -euo pipefail
          kubectl wait --for=condition=complete --timeout=600s job/safezone-infra-seed -n safezone || (echo "Job safezone-infra-seed failed" && exit 1)

      - name: Deploy argocd application for phase core
        run: |
          set -euo pipefail
          kubectl apply -n gitops -f deploy/release-v0.1.0/argocd/staging/apps/safezone-core.yaml

      - name: Wait 10 seconds for core deployment
        run: sleep 10

      - name: Deploy argocd application for phase core-seed
        run: |
          set -euo pipefail
          kubectl apply -n gitops -f deploy/release-v0.1.0/argocd/staging/apps/safezone-core-seed.yaml
          
      - name: Wait for core-seed job Create
        run: sleep 3
      
      - name: Wait for core-seed job completion
        run: |
          set -euo pipefail
          kubectl wait --for=condition=complete --timeout=6000s job/safezone-core-seed -n safezone || (echo "Job safezone-core-seed failed" && exit 1)

      - name: Deploy argocd application for phase ui
        run: |
          set -euo pipefail
          kubectl apply -n gitops -f deploy/release-v0.1.0/argocd/staging/apps/safezone-ui.yaml

      - name: Wait 10 seconds for ui deployment
        run: sleep 10

      - name: Notify deployment completion
        run: echo "Deployment completed successfully!"

      - name: Cleanup ArgoCD Application if failed
        if: failure()
        run: |
          kubectl get applications -n gitops -o name | grep "safezone-" | xargs -r kubectl delete -n gitops
          echo "ArgoCD applications for safezone-* have been deleted due to failure."

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "safezone.selectorLabels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: {{ .Values.syncWave.job }}
spec:
  backoffLimit: 1
  template:
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      restartPolicy: Never
      containers:
        - name: cli-db-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: 
            - bash
            - {{ .Values.job.script }}
          env:
            - name: ENVIRONMENT
              value: staging
            - name: RELAY_TIMEOUT
              value: {{ .Values.env.relayTimeout | quote }}
            - name: TOKEN_FILE
              value: {{ .Values.env.tokenFile | quote }}
            - name: RELAY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key:  CLI_RELAY_URL
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.authSecret }}
                  key: client_id 
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.authSecret }}
                  key: client_secret
            - name: REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.authSecret }}
                  key: refresh_token
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "safezone.cliRelay.basename" . }}
  labels:
    {{- include "safezone.selectorLabels" . | nindent 4 }}
    {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app: cli-relay
spec:
  selector:
    matchLabels:
      app: cli-relay
  template:
    metadata:
      labels:
        {{- include "safezone.selectorLabels" . | nindent 8 }}
        app: cli-relay
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
        - name: cli-relay
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 8000
          env:
            - name: ENVIRONMENT
              value: {{ .Values.service.environment | quote }}
            # db_secret connection settings
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.dbSecret }}
                  key: db_url
            - name: REPLICA_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.dbSecret }}
                  key: replica_url
            # redis_secret connection settings
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.redisSecret }}
                  key: redis_host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.redisSecret }}
                  key: redis_port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.redisSecret }}
                  key: redis_password
            - name: REDIS_DB
              value: "0"            
            # cache_secret connection setting
            - name: CACHE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: REDIS_CACHE_HOST
            - name: CACHE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: REDIS_CACHE_PORT
            - name: CACHE_PASSWORD
              valueFrom:  
                secretKeyRef:
                  name: {{ .Values.auth.cacheSecret }}
                  key: redis-password
            # auth_secret settings
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.authSecret }}
                  key: client_id 
            # configMap connection settings
            - name: SIMULATOR_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: SIMULATOR_URL
            - name: INGESTOR_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: INGESTOR_URL
            - name: ANALYTICS_API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: ANALYTICS_API_URL
            - name: DASHBOARD_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: DASHBOARD_URL
            - name: MKDOC_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: MKDOC_URL
            - name: TIME_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fullname" . }}-config
                  key: TIME_SERVER_URL
            # role file settings
            - name: ROLE_FILE
              value: {{ .Values.auth.roleFile | quote }}
            # default app settings
            - name: SERVICE_VERSION
              value: {{ .Values.image.tag | quote }}   
            - name: SERVICE_PORT
              value: "8000"
            - name: LOG_LEVEL
              value: {{ .Values.service.logLevel | quote }}
          # mounts for role file
          volumeMounts:
            - name: rolefile
              mountPath: {{ .Values.auth.roleFile | quote }}
              subPath: rolefile.yaml
      volumes:
        - name: rolefile
          secret:
            secretName: safezone-role-secrets
            items:
              - key: rolefile.yaml
                path: rolefile.yaml
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}